# Copyright 2023 The Authors (see AUTHORS file)

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#      http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'ci'

on:
  push:
    branches:
      - 'sqin/ci'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true


env:
  WIF_PROVIDER: 'projects/1004827208550/locations/global/workloadIdentityPools/gh-automation-i-e66ce1/providers/gh-automation-i-e66ce1'
  WIF_SERVICE_ACCOUNT: 'gh-automation-i-sa@gh-aod-ci-i-38c26b.iam.gserviceaccount.com'
  INTEG_TEST_PROJECT_ID: 'access-on-demand-i-12af76'
  INTEG_TEST_IAM_EXPIRATION_DURATION_HOUR: '2'
  TEST_INTEGRATION: 'true'
  INTEG_TEST_WORKING_DIR: '/tmp'
  INTEG_TEST_DATA_DIR: './test/data'

jobs:
  # Linting job - go.
  go_lint:
    uses: 'abcxyz/pkg/.github/workflows/go-lint.yml@main' # ratchet:exclude
    with:
      go_version: '1.20'

  yaml_lint:
    uses: 'abcxyz/pkg/.github/workflows/yaml-lint.yml@main' # ratchet:exclude

  # Unit tests - go
  go_test:
    uses: 'abcxyz/pkg/.github/workflows/go-test.yml@main' # ratchet:exclude
    with:
      go_version: '1.20'

  # lint_and_unit is a virtual job that is used as dependencies for later jobs.
  lint_and_unit:
    runs-on: 'ubuntu-latest'
    needs:
      - 'go_lint'
      - 'yaml_lint'
      - 'go_test'
    steps:
      - run: 'echo prechecks complete'

  run_integ_test:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
    # needs: ['lint_and_unit']
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c' # ratchet:actions/checkout@v3
      - name: 'Setup Go'
        uses: 'actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568' # ratchet:actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: 'Set Remaining Env Vars'
        run: |
          current_epoch_time=$(date -u +%s)
          expiration_epoch_time=$((${current_epoch_time} + (${{ env.INTEG_TEST_IAM_EXPIRATION_DURATION_HOUR }} * 3600)))
          current_time=$(date -d "@${current_epoch_time}" -u +"%Y-%m-%dT%H:%M:%SZ")
          expiration=$(date -d "@${expiration_epoch_time}" -u +"%Y-%m-%dT%H:%M:%SZ")
          run_id=${{ github.run_id }}

          echo "INTEG_TEST_IAM_EXPIRATION_START_TIME=${current_time}" >> $GITHUB_ENV
          echo "INTEG_TEST_IAM_EXPIRATION=${expiration}" >> $GITHUB_ENV
          echo "INTEG_TEST_CONDITION_TITLE=ci-expiry-${run_id: -6}" >> $GITHUB_ENV
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b' # ratchet:google-github-actions/setup-gcloud@v1
      - name: 'Install AOD CLI'
        run: 'go install github.com/abcxyz/access-on-demand/cmd/aod@${{ github.sha }}'
      - name: 'Run tests'
        run: |-
          # Substitue variables in data files and write them to test files.
          for file in $(ls ${{ env.INTEG_TEST_DATA_DIR }}); do
            test_file=${{ env.INTEG_TEST_WORKING_DIR }}/${file}
            touch ${test_file}
            envsubst < ${{ env.INTEG_TEST_DATA_DIR }}/${file} > ${test_file}
          done

          go test ./test/integration -timeout=15m
      - name: 'cleanup'
        if: '${{ always() }}'
        env:
          CLEANUP_FILE: '${{ env.INTEG_TEST_WORKING_DIR }}/ci_cleanup.yaml'
        run: |
          # touch ${{ env.CLEANUP_FILE }}
          # envsubst < test/data/ci_cleanup.yaml  > ${{ env.CLEANUP_FILE }}
          cat ${{ env.CLEANUP_FILE }}
          aod tool do -path ${{ env.CLEANUP_FILE }}
